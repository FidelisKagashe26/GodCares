# Generated by Django 4.2.7 on 2025-10-09 16:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('content', '0002_rename_content_les_series__7a8b9c_idx_content_les_series__e81338_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LessonLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^[0-9+\\-() ]+$', 'Phone number contains invalid characters.')])),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verification_token', models.CharField(blank=True, max_length=128)),
                ('token_created_at', models.DateTimeField(blank=True, null=True)),
                ('receive_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='events/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='audio_file',
            field=models.FileField(blank=True, null=True, upload_to='lessons/audio/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('mp3', 'wav', 'm4a', 'aac', 'ogg'))]),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='lessons/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='pdf_file',
            field=models.FileField(blank=True, null=True, upload_to='lessons/pdfs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('pdf',))]),
        ),
        migrations.AlterField(
            model_name='mediaitem',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='media/thumbnails/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AlterField(
            model_name='post',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='posts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AlterField(
            model_name='season',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='seasons/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AlterField(
            model_name='series',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='series/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('jpg', 'jpeg', 'png', 'webp', 'gif'))]),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='category_slug_lower_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='event_slug_lower_idx'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='lesson_slug_lower_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='post_slug_lower_idx'),
        ),
        migrations.AddIndex(
            model_name='season',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='season_slug_lower_idx'),
        ),
        migrations.AddIndex(
            model_name='series',
            index=models.Index(fields=['season', 'order'], name='content_ser_season__9db31f_idx'),
        ),
        migrations.AddIndex(
            model_name='series',
            index=models.Index(django.db.models.functions.text.Lower('slug'), name='series_slug_lower_idx'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='category_slug_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='event_slug_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='lesson_slug_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='post',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='post_slug_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='season',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='season_slug_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='series',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('slug'), name='series_slug_ci_unique'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lessonlike',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_likes', to='content.lesson'),
        ),
        migrations.AddField(
            model_name='lessonlike',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lessoncomment',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_comments', to='content.lesson'),
        ),
        migrations.AddField(
            model_name='lessoncomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcement',
            name='sent_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='lessonlike',
            index=models.Index(fields=['lesson', 'user'], name='content_les_lesson__8f0fee_idx'),
        ),
        migrations.AddConstraint(
            model_name='lessonlike',
            constraint=models.UniqueConstraint(fields=('user', 'lesson'), name='unique_user_lesson_like'),
        ),
        migrations.AddIndex(
            model_name='lessoncomment',
            index=models.Index(fields=['lesson', 'created_at'], name='content_les_lesson__8d83b9_idx'),
        ),
    ]
